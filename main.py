import discord
from datetime import datetime
from discord.ext import commands
from io import BytesIO
from discord.ui import Button, View, Modal
import sqlite3
import requests

conn = sqlite3.connect('update.db')
c = conn.cursor()

c.execute('''CREATE TABLE IF NOT EXISTS updates (update_text TEXT)''')
conn.commit()


connn = sqlite3.connect('updates.db')
cn = connn.cursor()

cn.execute('''CREATE TABLE IF NOT EXISTS updates (updates TEXT)''')
connn.commit()


class SelectRules(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(
                label="–ü—Ä–∞–≤–∏–ª–æ ‚Ññ1",
                value="who_we_are",
                description="–ü–æ–∫–∞–∂–µ—Ç –ø–µ—Ä–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ",
                emoji="<:00settings:1215000851597238342>"
            ),
            discord.SelectOption(
                label="–ü—Ä–∞–≤–∏–ª–æ ‚Ññ2",
                value="expectations",
                description="–ü–æ–∫–∞–∂–µ—Ç –≤—Ç–æ—Ä–æ–µ –ø—Ä–∞–≤–∏–ª–æ",
                emoji="<:kodart:1215282442760355881>"
            ),
            discord.SelectOption(
                label="–ü—Ä–∞–≤–∏–ª–æ ‚Ññ3",
                value="account_info",
                description="–ü–æ–∫–∞–∂–µ—Ç —Ç—Ä–µ—Ç—å–µ –ø—Ä–∞–≤–∏–ª–æ",
                emoji="<:starr:1215281872611975230>"
            ),
        ]

        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É...",
            min_values=1,
            max_values=1,
            options=options,
        )

    async def callback(self, interaction: discord.Interaction):
        if self.values[0] == "who_we_are":
            em = discord.Embed(title="–ü—Ä–∞–≤–∏–ª–æ ‚Ññ1", description="–í–∞–º –Ω—É–∂–Ω–æ –±–µ–∂–∞—Ç—å.", color=discord.Colour.blurple(), timestamp=interaction.message.created_at)
            em.set_footer(text="Kodart | Firecat, Prosto S, lucky.snake, ggahramaq")
            await interaction.response.send_message(embed=em, ephemeral=True)
        elif self.values[0] == "expectations":
            em = discord.Embed(title="–ü—Ä–∞–≤–∏–ª–æ ‚Ññ2", description="–í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–¥–±–∏—Ä–∞—Ç—å —â–∏—Ç.", color=discord.Colour.blurple(), timestamp=interaction.message.created_at)
            em.set_footer(text="Kodart | Firecat, Prosto S, lucky.snake, ggahramaq")
            await interaction.response.send_message(embed=em, ephemeral=True)
        elif self.values[0] == "account_info":
            em = discord.Embed(title="–ü—Ä–∞–≤–∏–ª–æ ‚Ññ3", description="–í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–±–µ–≥–∞—Ç—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π.", color=discord.Colour.blurple(), timestamp=interaction.message.created_at)
            em.set_footer(text="Kodart | Firecat, Prosto S, lucky.snake, ggahramaq")
            await interaction.response.send_message(embed=em, ephemeral=True)








class SelectCreators(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(
                label="Ggahramaq",
                value="ggahramaq",
                description="–ü–∞–π—Ç–æ–Ω –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç.",
                emoji="<a:chipi:1218879261314912278>"
            ),
            discord.SelectOption(
                label="Prosto S",
                value="prosto_s",
                description="3–¥ –¥–∏–∑–∞–π–Ω–µ—Ä.",
                emoji="<:shock:1217841430110666752>"
            ),
            discord.SelectOption(
                label="Firecat",
                value="firecat",
                description="–ö—Ä—É—Ç–æ–π –º–∏–∫—Ä–æ—á–µ–ª–∏–∫-—é–Ω–∏—Ç–∏—é—ç–µ—Ä.",
                emoji="<:firee:1217841342533861417>"
            ),
            discord.SelectOption(
                label="Lucky.snake",
                value="lucky_snake",
                description="–§—Ä–æ–Ω—Ç–µ–Ω–¥ –∏ –±—ç–∫–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫.",
                emoji="ü™ê"
            ),
        ]

        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞...",
            min_values=1,
            max_values=1,
            options=options,
        )

    async def callback(self, interaction: discord.Interaction):
        if self.values[0] == "ggahramaq":
            em = discord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ **Ggahramaq**", description="<a:danceee:1218879327022743612>**Ggahramaq** - –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ —è–∑—ã–∫–µ **Python**. –û–±–ª–∞–¥–∞–µ—Ç –≥–ª—É–±–æ–∫–∏–º –∑–Ω–∞–Ω–∏–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤, –≤–∫–ª—é—á–∞—è **Django**, **Quart**, –∏ –æ—Å–æ–±–µ–Ω–Ω–æ —Ö–æ—Ä–æ—à–æ –≤–ª–∞–¥–µ–µ—Ç —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–º **Flask**. –ö—Ä–æ–º–µ —ç—Ç–æ–≥–æ, –æ–Ω –∑–Ω–∞–µ—Ç —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è **Javascript**, –∞ —Ç–∞–∫–∂–µ —Ö–æ—Ä–æ—à–æ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç—Å—è –≤ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–µ **Node.js**, –æ–Ω —Ç–∞–∫–∂–µ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç—Å—è –≤ —Ä–∞–∑–Ω—ã—Ö –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —É–º–µ–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å Discord –±–æ—Ç–æ–≤.<a:danceee:1218879327022743612>", color=discord.Colour.blurple(), timestamp=interaction.message.created_at)
            em.set_footer(text="Kodart | Firecat, Prosto S, lucky.snake, ggahramaq")
            await interaction.response.send_message(embed=em, ephemeral=True)
        elif self.values[0] == "prosto_s":
            em = discord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ **Prosto S**", description="<:shock:1217841430110666752>**Prosto S** - –∑–æ–≤—É—Ç –°–µ—Ä–≥–µ–π, –æ–Ω –¥–µ–ª–∞–ª 3d –º–æ–¥–µ–ª–∏ –¥–ª—è –∏–≥—Ä—ã **KodArt Runner**. –¢–∞–∫–∂–µ –æ–Ω —Ö–æ—Ä–æ—à–∏–π –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å.<:shock:1217841430110666752>", color=discord.Colour.blurple(), timestamp=interaction.message.created_at)
            em.set_footer(text="Kodart | Firecat, Prosto S, lucky.snake, ggahramaq")
            await interaction.response.send_message(embed=em, ephemeral=True)
        elif self.values[0] == "firecat":
            em = discord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ **Firecat**", description="<:firee:1217841342533861417>**Firecat** - –∑–æ–≤—É—Ç –ò–ª—å—è—Å. –ï–º—É 14 –ª–µ—Ç, —É—á–∏—Ç—Å—è –≤ —Å—Ñ–µ—Ä–µ IT –±–æ–ª–µ–µ 4 –ª–µ—Ç. –ü–∏—à–µ—Ç —Å–∞–π—Ç—ã –Ω–∞ –≤–µ–±-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ Tilda, –¥–µ–ª–∞–µ—Ç –∏–≥—Ä—ã –Ω–∞ –¥–≤–∏–∂–∫–µ Unity.<:firee:1217841342533861417>", color=discord.Colour.blurple(), timestamp=interaction.message.created_at)
            em.set_footer(text="Kodart | Firecat, Prosto S, lucky.snake, ggahramaq")
            await interaction.response.send_message(embed=em, ephemeral=True)
        elif self.values[0] == "lucky_snake":
            em = discord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ **Lucky_snake**", description="ü™ê**Lucky_Snake** - –í–µ–±-–¥–∏–∑–∞–π–Ω–µ—Ä. –§—Ä–æ–Ω—Ç —ç–Ω–¥ –∏ –±—ç–∫ —ç–Ω–¥ –¥–∏–∑–∞–π–Ω–µ—Ä. –î–µ–ª–∞–µ—Ç —Å–∞–π—Ç –¥–ª—è –∏–≥—Ä—ã **Kodart Runner**.ü™ê", color=discord.Colour.blurple(), timestamp=interaction.message.created_at)
            em.set_footer(text="Kodart | Firecat, Prosto S, lucky.snake, ggahramaq")
            await interaction.response.send_message(embed=em, ephemeral=True)

class CreatorsView(discord.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(SelectCreators())


class RulesView(discord.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(SelectRules())

class Review(Modal):
    def __init__(self, *args, **kwargs) -> None:
        super().__init__(
            discord.ui.InputText(
                style=discord.InputTextStyle.short,
                label="–û—Ü–µ–Ω–∫–∞",
                required=True,
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É(10/10)"
            ),
            discord.ui.InputText(
                style=discord.InputTextStyle.long,
                label="–û—Ç–∑—ã–≤",
                required=True,
                placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –æ –∏–≥—Ä–µ"
            ),
            *args,
            **kwargs,
        )
    
    async def callback(self, interaction: discord.Interaction):
        user_id = 906115102888046623
        userr = await bot.fetch_user(user_id)
        embed = discord.Embed(title="–ù–æ–≤–∞—è –ó–∞—è–≤–∫–∞!", description=f"{interaction.user.name} –Ω–∞–ø–∏—Å–∞–ª –æ—Ç–∑—ã–≤!", color=discord.Colour.blurple(), timestamp=interaction.message.created_at)
        embed.add_field(name="–û—Ü–µ–Ω–∫–∞:", value=f"{self.children[0].value}<:starr:1215281872611975230>", inline=True)
        embed.add_field(name="–û—Ç–∑—ã–≤:", value=f"–û—Ç–∑—ã–≤: {self.children[1].value}<:kodart:1215282442760355881>", inline=True)
        embed.set_footer(text="Kodart | Firecat, Prosto S, lucky.snake, ggahramaq")
        embed.set_author(name=interaction.user)
        await userr.send(embed=embed)
        await interaction.response.send_message("–í–∞—à –æ—Ç–∑—ã–≤ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!", ephemeral=True)

class UpdatesSubmitView(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.bot = bot
        self.value = None

    @discord.ui.button(label='Yes', style=discord.ButtonStyle.success)
    async def yes_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        channel_id = 1223219861426012200
        c.execute("SELECT update_text FROM updates")
        new_update_text = c.fetchone()[0]
        cn.execute("INSERT INTO updates (updates) VALUES (?)", (new_update_text,))
        connn.commit()
        channel = self.bot.get_channel(channel_id)
        button = Button(label="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤..", style=discord.ButtonStyle.grey, emoji="<:00settings:1215000851597238342>")
    
        async def button_callback(interaction):
            modal = Review(title="–û—Ç–∑—ã–≤") 
            await interaction.response.send_modal(modal)

        button.callback = button_callback

        view = View()
        view.add_item(button)
        view.timeout = None
        if channel:
            await channel.send(
f"""
# –ü—Ä–æ–∏–∑–æ—à–ª–æ –Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –∏–≥—Ä–µ!

`{new_update_text}`
""", view=view)
        await interaction.response.send_message("–í—ã –¥–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!")
            
        



    @discord.ui.button(label='Edit', style=discord.ButtonStyle.grey)
    async def edit_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        c.execute("SELECT update_text FROM updates")
        new_update_text = c.fetchone()[0]
        view = Update(title="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ", interaction=interaction, previous_input=new_update_text)
        await interaction.response.send_modal(view)


    @discord.ui.button(label='No', style=discord.ButtonStyle.danger)
    async def no_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        await interaction.response.defer()
        await interaction.delete_original_response()


class Update(Modal):
    def __init__(self, interaction = discord.Interaction, previous_input=None, *args, **kwargs) -> None:
        super().__init__(
            discord.ui.InputText(
                style=discord.InputTextStyle.long,
                label="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ",
                required=True,
                placeholder="**–ü—Ä–æ–∏–∑–æ—à–µ–ª –Ω–æ–≤—ã–π –±–∞–≥—Ñ–∏–∫—Å–∏–Ω–≥**",
                value=previous_input,
            ),
            *args,
            **kwargs,
        )
    
    async def callback(self, interaction: discord.Interaction):
        c.execute("DELETE FROM updates")

        c.execute("INSERT INTO updates (update_text) VALUES (?)", (self.children[0].value,))
        conn.commit()

        embed = discord.Embed(title="–í–∞—à–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—ã–ª–æ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ! –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å?", description=
f"""
**–í–æ—Ç —Ç–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –≤–∞—à —Ç–µ–∫—Å—Ç:**
`{self.children[0].value}`
""", color=discord.Colour.blurple(), timestamp=interaction.message.created_at)
        embed.set_footer(text="Kodart | Firecat, Prosto S, lucky.snake, ggahramaq")
        view = UpdatesSubmitView()
        await interaction.response.send_message(embed=embed, view=view)



class UpdatesView(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.value = None

    @discord.ui.button(label='Yes', style=discord.ButtonStyle.success)
    async def yes_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        modal = Update(title="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
        await interaction.response.send_modal(modal)

    @discord.ui.button(label='No', style=discord.ButtonStyle.danger)
    async def no_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        await interaction.response.defer()
        await interaction.delete_original_response()

intents = discord.Intents.all()

bot = commands.Bot(command_prefix='!', intents=intents)
random_command = "helloworld"





@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')
    userr_id = 1042775942646485002
    userrr = await bot.fetch_user(userr_id)
    await userrr.send("**–ö–æ–º–∞–Ω–¥–∞ `!kodartupdatescom` —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≤–∞—Å!**")

@bot.slash_command()
async def rules(interaction):
    view = RulesView()
    await interaction.response.send_message(
"""
**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–æ –Ω–∏–∂–µ.**
"""
, view=view)

@bot.command()
async def kodartupdatescom(ctx):
    allowed_user_id = 1042775942646485002  

    if ctx.author.id == allowed_user_id and isinstance(ctx.channel, discord.DMChannel):
        view = UpdatesView()
        await ctx.send("–í—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ?",view=view)
    elif ctx.author.id != allowed_user_id:
        await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ–±–∞–≤–ª—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!")
    else:
        await ctx.send("–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.")




@bot.slash_command()
async def updates(ctx):
    connection = sqlite3.connect('updates.db')
    cursor = connection.cursor()
    
    cursor.execute('SELECT * FROM updates')
    updates = cursor.fetchall()

    if not updates:
        await ctx.response.send_message("–ü–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç—É –Ω–∏–∫–∞–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π!")
        return

    number_emojis = {
        1: "<:onee:1218799891111739483> ",
        2: "<:twoo:1218799861407813672> ",
        3: "<:threee:1218799812443508783> ",
        4: "<:fourr:1218799754285158420>",
        5: "<:fivee:1218799706616893452> ",
        6: "<:sixx:1218799666104373318> ",
        7: "<:sevenn:1218799638237286501> ",
        8: "<:eightt:1218799581035364363> ",
        9: "<:ninee:1218799542183526490>",
        0: "<:zeroo:1218799917707821156> ",
    }

    embed = discord.Embed(title="–û–±–Ω–æ–≤–ª–µ–Ω–∏—è", description="–í—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –≤ –∏–≥—Ä–µ:")

    for i, update in enumerate(updates, start=1):
        update_emoji = number_emojis[i % 10]  
        if i > 9:
            tens = i // 10
            ones = i % 10
            update_emoji = f"{number_emojis[tens]}{number_emojis[ones]}"  
        embed.add_field(name=f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {update_emoji}:", value=f"`{update[0]}`", inline=False) 

    await ctx.response.send_message(embed=embed)


@bot.slash_command()
async def info(ctx):
    view = CreatorsView()
    await ctx.response.send_message(
"""
**–°–æ–∑–¥–∞—Ç–µ–ª–∏:**
1. <a:chipi:1218879261314912278> `Ggahramaq`<a:danceee:1218879327022743612>
2. <:shock:1217841430110666752>`Prosto S`<:shock:1217841430110666752>
3. <:firee:1217841342533861417>`Firecat`<:firee:1217841342533861417>
4. ü™ê`Lucky.snake`ü™ê

**–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –Ω–∏–∂–µ.**
"""
, view=view)





bot.run("pon!")
